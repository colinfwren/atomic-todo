enum TodoLevel {
  day,
  week,
  month
}

enum ContactPreferences {
  NoMarketing
  Marketing
}

type Todo {
  id: ID!
  name: String!
  completed: Boolean!
}

type TodoList {
  id: ID!
  name: String
  level: TodoLevel!
  todos: [ID!]!
  parentList: ID
  childLists: [ID!]!
  startDate: Int!
}

type TodoBoard {
  id: ID!
  name: String!
  days: [ID!]!
  weeks: [ID!]!
  months: [ID!]!
  startDate: Int!
}

type User {
  id: ID!
  name: String!
  email: String!
  contactPreferences: ContactPreferences!
}

type TodoBoardResult {
  board: TodoBoard!,
  lists: [TodoList!]!
  todos: [Todo!]!
}

type Query {
  getTodoBoard(id: ID!): TodoBoardResult
}

input TodoListUpdateInput {
  id: ID!,
  todos: [ID!]!
}

input TodoUpdateInput {
  id: ID!
  name: String!
  completed: Boolean!
}

input BoardNameUpdateInput {
  id: ID!
  name: String!
}

type Mutation {
  moveBoardForwardByWeek(boardId: ID!): TodoBoardResult
  moveBoardBackwardByWeek(boardId: ID!): TodoBoardResult
  updateTodoList(todoList: TodoListUpdateInput!): TodoList,
  updateTodoLists(todoLists: [TodoListUpdateInput!]!): [TodoList],
  updateTodo(todo: TodoUpdateInput!): Todo,
  updateTodos(todos: [TodoUpdateInput!]!): [Todo]
  updateBoardName(boardNameUpdate: BoardNameUpdateInput!): TodoBoard
  addTodo(boardId: ID!, listId: ID!): TodoBoardResult
}